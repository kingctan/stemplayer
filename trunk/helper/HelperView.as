package helper {	import flash.display.*;	import flash.events.*;	import flash.text.*;		import util.*;		/**	* ...	* @author Robin Petterd	*/			 	public class  HelperView extends MovieClip {				[Embed(source="/assets/arial.ttf", fontFamily="Arial")]		private var Arial:Class;				private var myFont:Font;		private var layout = new Layout(); 		private var lastView = null; 				public function HelperView() {			//trace("helper View  built");					}				public function update(currentHelp:XML) 		{		myFont = new Arial ();		//trace("about to update the help  view"); 		////trace(currentHelp);		 //trace("current help is " + currentHelp); //TOD0 - up to here where I need to make it do a factory and make choice 		 //of help types and put on that on the		 		 //trace(" The help type is " + currentHelp.valueOf().@type); 			 //TODO - add .swf/image to the media type 		 var type:String = currentHelp.@type; 			 switch (type) 			 {				case "text":  					//trace("need to make a text type");					buildTextHelp(currentHelp);					break;				default: 				 //trace("hmm that type wasn't found"); 			}		}				private function buildTextHelp(currentHelp):void		{						;						var text:TextField = new TextField(); 			text.htmlText = currentHelp; 			text.embedFonts = true; 			text.wordWrap = true;						//TODO - MAYBE -  this is a bit of hack because I really should be using the layouSetPos stuff but this works 						text.x = currentHelp.@x; 			text.y = currentHelp.@y;						text.width =  currentHelp.@width;			text.height =  currentHelp.@height;						//layout.SetPos(text, currentHelp.valueOf() );  // BUG - this creates a a bit of a weird erro			//layout.SetScale(text, currentHelp.valueOf() );						//TODO - need to get this being putted off a CSS file  			var formatter:TextFormat = new TextFormat(); 			formatter.color = currentHelp.@color;			formatter.bold = true;			formatter.font =  myFont.fontName;			formatter.size = '12';					text.setTextFormat(formatter);						text.antiAliasType = AntiAliasType.ADVANCED;						text.background = true;			//trace(currentHelp.@background);			text.backgroundColor = currentHelp.@background;						text.alpha =  currentHelp.@alpha;			lastView = text; 			addChild(text); 									////trace(text);	        				}				public function killLast() {			//trace("hhhhhhhhh trying to kill the last"); 			//trace(lastView);						if (lastView != null) {				removeChild(lastView);				lastView = null; 			}		}	}	}